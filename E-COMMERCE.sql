
CREATE TABLE SUPPLIER (
SUPP_ID INT PRIMARY KEY, 
SUPP_NAME VARCHAR (20),
SUPP_CITY VARCHAR (20),
SUPP_PHONE VARCHAR (20));

CREATE TABLE CUSTOMER (
CUS_ID INT PRIMARY KEY,
CUS_NAME VARCHAR (20),
CUS_PHONE BIGINT,
CUS_CITY VARCHAR (20),
CUS_GENDER VARCHAR (10));

CREATE TABLE CATEGORY (
CAT_ID INT PRIMARY KEY,
CAT_NAME VARCHAR (20));

CREATE TABLE PRODUCT (
PRO_ID INT PRIMARY KEY,
PRO_NAME VARCHAR (20),
PRO_DESC VARCHAR (20),
CAT_ID INT,
FOREIGN KEY (CAT_ID) REFERENCES CATEGORY (CAT_ID) );
CREATE TABLE PRODUCT_DETAILS (
PROD_ID INT PRIMARY KEY,
PRO_ID INT,
SUPP_ID INT,
PRICE FLOAT,
FOREIGN KEY (PRO_ID) REFERENCES PRODUCT (PRO_ID),
FOREIGN KEY (SUPP_ID) REFERENCES SUPPLIER (SUPP_ID));
CREATE TABLE `ORDER` (
ORD_ID INT PRIMARY KEY,
ORD_AMOUNT FLOAT,
ORD_DATE DATE,
CUS_ID INT,
PROD_ID INT,
FOREIGN KEY (CUS_ID) REFERENCES CUSTOMER (CUS_ID),
FOREIGN KEY (PROD_ID) REFERENCES PRODUCT_DETAILS (PROD_ID));

CREATE TABLE RATING (
RAT_ID INT PRIMARY KEY,
CUS_ID INT, 
SUPP_ID INT,
RAT_RATSTARS INT,
FOREIGN KEY (CUS_ID) REFERENCES CUSTOMER (CUS_ID),
FOREIGN KEY (SUPP_ID) REFERENCES SUPPLIER (SUPP_ID));

INSERT INTO SUPPLIER VALUES (1, "Rajesh Retails", "Delhi", 1234567890);
INSERT INTO SUPPLIER VALUES (2, "Appario Ltd.", "Mumbai", 2589631470);
INSERT INTO SUPPLIER VALUES (3, "Knome products", "Banglore", 9785462315);
INSERT INTO SUPPLIER VALUES (4, "Bansal Retails", "Kochi", 8975463285);
INSERT INTO SUPPLIER VALUES (5, "Mittal Ltd.", "Lucknow", 7898456532);
SELECT * FROM SUPPLIER;

INSERT INTO CUSTOMER VALUES (1, "AAKASH",9999999999, "DELHI", "M");
INSERT INTO CUSTOMER VALUES (2, "AMAN",9785463215, "NOIDA", "M");
INSERT INTO CUSTOMER VALUES (3, "NEHA",9999999999, "MUMBAI", "F");
INSERT INTO CUSTOMER VALUES (4, "MEGHA",9994562399, "KOLKATA", "F");
INSERT INTO CUSTOMER VALUES (5, "PULKIT",7895999999, "LUCKNOW", "M");
SELECT * FROM CUSTOMER;
INSERT INTO CATEGORY VALUES (1, "BOOKS");
INSERT INTO CATEGORY VALUES (2, "GAMES");
INSERT INTO CATEGORY VALUES (3, "GROCERIES");
INSERT INTO CATEGORY VALUES (4, "ELECTRONICS");
INSERT INTO CATEGORY VALUES (5, "CLOTHES");
SELECT * FROM CATEGORY;


CREATE DATABASE E_COMMERCE;
USE E_COMMERCE;
DROP TABLE SUPPLIER;
DROP TABLE CUSTOMER;
DROP TABLE CUSTOMERS;
DROP TABLE CATEGORY;
DROP TABLE PRODUCT;
DROP TABLE PRODUCT_DETAILS;
DROP TABLE `ORDER`;
DROP TABLE RATING;
CREATE TABLE SUPPLIER (
SUPP_ID INT PRIMARY KEY, 
SUPP_NAME VARCHAR (20),
SUPP_CITY VARCHAR (20),
SUPP_PHONE VARCHAR (20));
CREATE TABLE CUSTOMER (
CUS_ID INT PRIMARY KEY,
CUS_NAME VARCHAR (20),
CUS_PHONE BIGINT,
CUS_CITY VARCHAR (20),
CUS_GENDER VARCHAR (10));

INSERT INTO PRODUCT VALUES (1, "GTA V", "DFJDJFDJFDJFDJFJF", 2);
INSERT INTO PRODUCT VALUES (2, "TSHIRT", "DFDFJDFJDKFD", 5);
INSERT INTO PRODUCT VALUES (3, "ROG LAPTOP", "DFNTTNTNTERND", 4);
INSERT INTO PRODUCT VALUES (4, "OATS", "REURENTBTOTH", 3);
INSERT INTO PRODUCT VALUES (5, "HARRY POTTER", "NBEMCTHTJTH", 1);

INSERT INTO PRODUCT_DETAILS VALUES (1, 1, 2, 1500);
INSERT INTO PRODUCT_DETAILS VALUES (2, 3, 5, 30000);
INSERT INTO PRODUCT_DETAILS VALUES (3, 5, 1, 3000);
INSERT INTO PRODUCT_DETAILS VALUES (4, 2, 3, 2500);
INSERT INTO PRODUCT_DETAILS VALUES (5, 4, 1, 1000);

INSERT INTO `ORDER` VALUES (20, 1500, "2021-10-12", 3, 5);
INSERT INTO `ORDER` VALUES (25, 30500, "2021-09-16", 5, 2);
INSERT INTO `ORDER` VALUES (26, 2000, "2021-10-05", 1, 1);
INSERT INTO `ORDER` VALUES (30, 3500, "2021-08-16", 4, 3);
INSERT INTO `ORDER` VALUES (50, 2000, "2021-10-06", 2, 1);

INSERT INTO RATING VALUES (1, 2, 2, 4);
INSERT INTO RATING VALUES (2, 3, 4, 3);
INSERT INTO RATING VALUES (3, 5, 1, 5);
INSERT INTO RATING VALUES (4, 1, 3, 2);
INSERT INTO RATING VALUES (5, 4, 5, 4);

/*3)	Display the number of the customer group by their genders 
who have placed any order of amount greater than or equal to Rs.3000.*/

select CUS_GENDER, count(CUS_NAME) from CUSTOMER 
inner join
(select * from `ORDER` where ORD_AMOUNT>=3000) as Q 
ON (CUSTOMER.CUS_ID=Q.CUS_ID) group by CUS_GENDER;

/* 4)	Display all the orders along with the product 
name ordered by a customer having Customer_Id=2.*/

SELECT PRODUCT.PRO_NAME, P.* FROM PRODUCT LEFT JOIN 
`ORDER` AS P ON P.PROD_ID = PRODUCT.PRO_ID WHERE P.CUS_ID = 2;

/* 5)	Display the Supplier details who can supply more than one product. */

select * from SUPPLIER
inner join
(select SUPP_ID from (select SUPP_ID, count(SUPP_ID) as count from PRODUCT_DETAILS group by SUPP_ID) 
as Q having max(count)) as P On SUPPLIER.SUPP_ID= P.SUPP_ID;

/* 6. Find the category of the product whose order amount is minimum.*/

select CAT_NAME from category
inner join
(select CAT_ID from PRODUCT
inner join
(select PRO_ID from PRODUCT_DETAILS 
inner join 
(select PROD_ID from `ORDER` having min(ORD_AMOUNT)) 
as Q ON PRODUCT_DETAILS.PROD_ID=Q.PROD_ID) as P ON PRODUCT.PRO_ID=P.PRO_ID) 
as output ON CATEGORY.CAT_ID=output.CAT_ID;


/* 7. Display the Id and Name of the Product ordered after “2021-10-05”.*/

select PRO_NAME as PRODUCT_NAME, output.PRO_ID as PRODUCT_ID from PRODUCT
inner join
(select PRO_ID from PRODUCT_DETAILS
inner join
(select PROD_ID from `ORDER` where ORD_DATE >'2021-10-05') as Q 
ON PRODUCT_DETAILS.PROD_ID=Q.PROD_ID) as output ON PRODUCT.PRO_ID=output.PRO_ID;


/* 8. Display customer name and gender whose names start or end with character 'A'.*/

select CUS_NAME, CUS_GENDER from CUSTOMER where CUS_NAME like '%A' OR CUS_NAME like 'A%';


/* 9. Create a stored procedure to display the Rating for a Supplier 
if any along with the Verdict on that rating if any like if rating >4 
then “Genuine Supplier” if rating >2 “Average Supplier” else “Supplier should not be considered”.*/

DELIMITER //
Create procedure ShowRating(S_ID int)
BEGIN
SELECT SUPP_ID, RAT_RATSTARS,
CASE
    WHEN RAT_RATSTARS > 4 THEN "Genuine Supplier"
    WHEN RAT_RATSTARS > 2 THEN "Average Supplier"
    ELSE "Supplier should not be considered"
END AS VERDICT
FROM RATING where SUPP_ID= S_ID;
END //
DELIMITER ;

call ShowRating(3);
